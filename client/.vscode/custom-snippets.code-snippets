{
  "Testing Setup": {
    "prefix": "test-temp",
    "body": [
      "import '@testing-library/jest-dom';",
      "import { render, act } from '@testing-library/react';",
      "import ${1:Example} from './${1:Example}';",
      "",
      "describe('${1:Example} Component', () => {",
      "  beforeEach(async () => {",
      "    await act(async () => {",
      "      render(<${1:Example} />);",
      "    });",
      "  });",
      "",
      "  test('${2:demo}', () => {",
      "    expect(${3:true}).toBe(${3:true});",
      "  });",
      "});",
    ],
    "description": "Setup testing file for Example component with jest and react-testing-library",
  },

  "Jest Axios Mock": {
    "prefix": "jest-axios",
    "body": [
      "import '@testing-library/jest-dom';",
      "import axios from 'axios';",
      "import { todosMockData } from './mock/todos-mock.data';",
      "import { render, screen, act, fireEvent } from '@testing-library/react';",
      "import ${1:Example} from './${1:Example}';",
      "",
      "jest.mock('axios');",
      "const mockedAxios = axios as jest.MockedFunction<typeof axios>;",
      "",
      "describe('${1:Example} component', () => {",
      "  beforeEach(async () => {",
      "    mockedAxios.mockResolvedValue({ data: todosMockData });",
      "    await act(async () => {",
      "      render(<${1:Example} />);",
      "    });",
      "  });",
      "",
      "  afterEach(() => {",
      "    jest.clearAllMocks();",
      "  });",
      "",
      "  test('${2:demo}', () => {",
      "    expect(${3:true}).toBe(${3:true});",
      "  });",
      "});",
    ],
    "description": "Setup Jest test for Example component with mocked Axios",
  },
  "Component TS Template": {
    "prefix": "cts",
    "body": [
      "export type IToastNotificationModel = {};",
      "",
      "export default function ToastNotification(props: IToastNotificationModel) {",
      "  const {} = props;",
      "  return <div>ToastNotification</div>;",
      "}",
    ],
    "description": "Simple template for a ToastNotification component in TypeScript",
  },
}
